task androidJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: androidJavadoc) {
    classifier = 'javadoc'
    from androidJavadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact file("$buildDir/outputs/aar/$project.name-debug.aar")
            artifact sourcesJar
            artifact javadocJar

            artifactId bintray.pkg.name

            pom.withXml {
                def root = asNode()
                def dependencies = root.appendNode("dependencies")
                configurations.compile.allDependencies.each {
                    if (it['group'] != null && it['group'] != 'com.jeskeshouse') {
                        def dependency = dependencies.appendNode("dependency")
                        dependency?.appendNode("groupId", it["group"])
                        dependency?.appendNode("artifactId", it["name"])
                        dependency?.appendNode("version", it["version"])
                    }
                }

                def dependency = dependencies.appendNode("dependency")
                dependency?.appendNode("groupId", "com.jeskeshouse")
                dependency?.appendNode("artifactId", siblingDependency)
                dependency?.appendNode("version", project.version)

                root.children().last() + pomConfig
            }
        }
    }
}